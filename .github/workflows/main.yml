name: Tests

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version:
          - '6.0'
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  horusec-security:
    name: horusec-security
    needs: build_test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with: # Required when commit authors is enabled
        fetch-depth: 0
    - name: Running Horusec Security
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
        horusec start -p="./" -e="true" --disable-docker="true" --enable-git-history="true" --enable-commit-author="true"
  
  docker-build:
    name: Build Docker image
    needs: horusec-security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/amd64,linux/arm/v7'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/crm-cavalcante:marketing

  Execute_POST_request:
    name: Execute POST request
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Execute POST request
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{secrets.WEBHOOK_URL}}
          data: '{"stackName": "crm-cavalcante", "stackStatus": "success"}'


    

    
